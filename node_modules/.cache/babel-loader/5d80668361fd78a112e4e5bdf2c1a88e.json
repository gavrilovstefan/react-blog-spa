{"ast":null,"code":"const querySetter = (key, value, query) => {\n  const search = query;\n  const params = new URLSearchParams(search);\n  const test = params.get(\"page\");\n  let q = query + \"&\";\n  let re = new RegExp(\"[?|&]\" + key + \"=.*?&\");\n  if (!re.test(q)) q += key + \"=\" + encodeURI(value);else q = q.replace(re, \"&\" + key + \"=\" + encodeURIComponent(value));\n  q = q.trimStart(\"&\").trimEnd(\"&\");\n  return q[0] === \"?\" ? q : q = \"?\" + q;\n};\n\nconst querySetter1 = (key, value, query) => {\n  /*     const newKey = `${key}=`\r\n      if(query === \"\") {\r\n          return `?${newKey + value}`\r\n      } else if (query.includes(newKey)) {\r\n          return query.replace(newKey + test, newKey + value)\r\n      } */\n  return key;\n};\n\nexport { querySetter, querySetter1 };","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/SourceMx/react-blog/react-blog-spa-gavrilovstefan/src/helpers/querySetter.js"],"names":["querySetter","key","value","query","search","params","URLSearchParams","test","get","q","re","RegExp","encodeURI","replace","encodeURIComponent","trimStart","trimEnd","querySetter1"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,KAAb,KAAuB;AACvC,QAAMC,MAAM,GAAGD,KAAf;AACA,QAAME,MAAM,GAAG,IAAIC,eAAJ,CAAoBF,MAApB,CAAf;AACA,QAAMG,IAAI,GAAGF,MAAM,CAACG,GAAP,CAAW,MAAX,CAAb;AAEA,MAAIC,CAAC,GAAGN,KAAK,GAAG,GAAhB;AACA,MAAIO,EAAE,GAAG,IAAIC,MAAJ,CAAW,UAAUV,GAAV,GAAgB,OAA3B,CAAT;AACA,MAAI,CAACS,EAAE,CAACH,IAAH,CAAQE,CAAR,CAAL,EACIA,CAAC,IAAIR,GAAG,GAAG,GAAN,GAAYW,SAAS,CAACV,KAAD,CAA1B,CADJ,KAGIO,CAAC,GAAGA,CAAC,CAACI,OAAF,CAAUH,EAAV,EAAc,MAAMT,GAAN,GAAY,GAAZ,GAAkBa,kBAAkB,CAACZ,KAAD,CAAlD,CAAJ;AACJO,EAAAA,CAAC,GAAGA,CAAC,CAACM,SAAF,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,GAAzB,CAAJ;AACA,SAAOP,CAAC,CAAC,CAAD,CAAD,KAAO,GAAP,GAAaA,CAAb,GAAiBA,CAAC,GAAG,MAAMA,CAAlC;AACH,CAbD;;AAeA,MAAMQ,YAAY,GAAG,CAAChB,GAAD,EAAMC,KAAN,EAAcC,KAAd,KAAwB;AAG7C;;;;;;AAMI,SAAOF,GAAP;AACH,CAVD;;AAYA,SACID,WADJ,EAEIiB,YAFJ","sourcesContent":["const querySetter = (key, value, query) => {\r\n    const search = query\r\n    const params = new URLSearchParams(search);\r\n    const test = params.get(\"page\");\r\n\r\n    let q = query + \"&\";\r\n    let re = new RegExp(\"[?|&]\" + key + \"=.*?&\");\r\n    if (!re.test(q))\r\n        q += key + \"=\" + encodeURI(value);\r\n    else\r\n        q = q.replace(re, \"&\" + key + \"=\" + encodeURIComponent(value));\r\n    q = q.trimStart(\"&\").trimEnd(\"&\");\r\n    return q[0]===\"?\" ? q : q = \"?\" + q;\r\n}\r\n\r\nconst querySetter1 = (key, value , query) => {\r\n\r\n\r\n/*     const newKey = `${key}=`\r\n    if(query === \"\") {\r\n        return `?${newKey + value}`\r\n    } else if (query.includes(newKey)) {\r\n        return query.replace(newKey + test, newKey + value)\r\n    } */\r\n    return key\r\n}\r\n\r\nexport { \r\n    querySetter,\r\n    querySetter1\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}