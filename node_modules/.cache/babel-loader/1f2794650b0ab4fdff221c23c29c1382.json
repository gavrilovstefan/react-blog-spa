{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Desktop\\\\SourceMx\\\\react-blog\\\\react-blog-spa-gavrilovstefan\\\\src\\\\pages\\\\Article.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport AuthorInfo from \"../components/AuthorInfo\";\nimport ArticleInfo from \"../components/ArticleInfo\";\nimport Comments from \"../components/Comments\";\n\nconst Article = () => {\n  const [article, setArticle] = useState({});\n  const [author, setAuthor] = useState({});\n  const [allTags, setAllTags] = useState({});\n  const [comments, setComments] = useState([]);\n  let allData = [];\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      const dataArticle = fetch(`${process.env.REACT_APP_API_ENDPOINT}/articles/${id}`).then(res => res.json());\n      const dataTags = fetch(`${process.env.REACT_APP_API_ENDPOINT}/tags`).then(res => res.json());\n      const dataAuthor = fetch(`${process.env.REACT_APP_API_ENDPOINT}/articles/${id}/author`).then(res => res.json());\n      const dataComments = fetch(`${process.env.REACT_APP_API_ENDPOINT}/articles/${id}/comments`).then(res => res.json());\n      Promise.all([dataArticle, dataTags, dataAuthor, dataComments]).then(values => allData = values);\n      setArticle(allData[0]);\n      setAllTags(allData[1]);\n      setAuthor(allData[2]);\n      setComments(allData[3]);\n    };\n\n    fetchData();\n  }, [id]);\n  console.log(allData);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"Hello\");\n};\n\nexport default Article;\n{\n  /* <div>\r\n  <Navbar />\r\n  <AuthorInfo author={author} />\r\n  <ArticleInfo article={article} allTags={allTags} />\r\n  <div className=\"container\" key=\"cards\">\r\n   <div className=\"row\">\r\n     {comments.map((comment) => (\r\n       <Comments comment={comment} key={comment.id} />\r\n     ))}\r\n   </div>\r\n  </div>\r\n  </div> */\n}","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/SourceMx/react-blog/react-blog-spa-gavrilovstefan/src/pages/Article.js"],"names":["React","useEffect","useState","useParams","Navbar","AuthorInfo","ArticleInfo","Comments","Article","article","setArticle","author","setAuthor","allTags","setAllTags","comments","setComments","allData","id","fetchData","dataArticle","fetch","process","env","REACT_APP_API_ENDPOINT","then","res","json","dataTags","dataAuthor","dataComments","Promise","all","values","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIe,OAAO,GAAG,EAAd;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASf,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,SAAS,GAAG,YAAY;AAC5B,YAAMC,WAAW,GAAGC,KAAK,CACtB,GAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,aAAYN,EAAG,EAD9B,CAAL,CAElBO,IAFkB,CAEZC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFI,CAApB;AAIA,YAAMC,QAAQ,GAAGP,KAAK,CACnB,GAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,OADlB,CAAL,CAEfC,IAFe,CAETC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFC,CAAjB;AAIA,YAAME,UAAU,GAAGR,KAAK,CACrB,GAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,aAAYN,EAAG,SAD/B,CAAL,CAEjBO,IAFiB,CAEXC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFG,CAAnB;AAIA,YAAMG,YAAY,GAAGT,KAAK,CACvB,GAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,aAAYN,EAAG,WAD7B,CAAL,CAEnBO,IAFmB,CAEbC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFK,CAArB;AAKAI,MAAAA,OAAO,CAACC,GAAR,CAAY,CACVZ,WADU,EAEVQ,QAFU,EAGVC,UAHU,EAIVC,YAJU,CAAZ,EAKGL,IALH,CAKSQ,MAAD,IAAYhB,OAAO,GAAGgB,MAL9B;AAOAvB,MAAAA,UAAU,CAACO,OAAO,CAAC,CAAD,CAAR,CAAV;AACAH,MAAAA,UAAU,CAACG,OAAO,CAAC,CAAD,CAAR,CAAV;AACAL,MAAAA,SAAS,CAACK,OAAO,CAAC,CAAD,CAAR,CAAT;AACAD,MAAAA,WAAW,CAACC,OAAO,CAAC,CAAD,CAAR,CAAX;AACD,KA7BD;;AA8BAE,IAAAA,SAAS;AACV,GAhCQ,EAgCN,CAACD,EAAD,CAhCM,CAAT;AAiCAgB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AAGD,CA7CD;;AA+CA,eAAeT,OAAf;AAEA;AAAC;;;;;;;;;;;;AAWS","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../components/Navbar\";\r\nimport AuthorInfo from \"../components/AuthorInfo\";\r\nimport ArticleInfo from \"../components/ArticleInfo\";\r\nimport Comments from \"../components/Comments\";\r\n\r\nconst Article = () => {\r\n  const [article, setArticle] = useState({});\r\n  const [author, setAuthor] = useState({});\r\n  const [allTags, setAllTags] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  let allData = []\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const dataArticle = fetch(\r\n        `${process.env.REACT_APP_API_ENDPOINT}/articles/${id}`\r\n      ).then((res) => res.json());\r\n\r\n      const dataTags = fetch(\r\n        `${process.env.REACT_APP_API_ENDPOINT}/tags`\r\n      ).then((res) => res.json());\r\n\r\n      const dataAuthor = fetch(\r\n        `${process.env.REACT_APP_API_ENDPOINT}/articles/${id}/author`\r\n      ).then((res) => res.json());\r\n\r\n      const dataComments = fetch(\r\n        `${process.env.REACT_APP_API_ENDPOINT}/articles/${id}/comments`\r\n      ).then((res) => res.json());\r\n\r\n\r\n      Promise.all([\r\n        dataArticle,\r\n        dataTags,\r\n        dataAuthor,\r\n        dataComments,\r\n      ]).then((values) => allData = values);\r\n\r\n      setArticle(allData[0])\r\n      setAllTags(allData[1]);\r\n      setAuthor(allData[2]);\r\n      setComments(allData[3]);\r\n    };\r\n    fetchData();\r\n  }, [id]);\r\n  console.log(allData)\r\n  return (\r\n    <p>Hello</p>\r\n  );\r\n};\r\n\r\nexport default Article;\r\n\r\n{/* <div>\r\n<Navbar />\r\n<AuthorInfo author={author} />\r\n<ArticleInfo article={article} allTags={allTags} />\r\n<div className=\"container\" key=\"cards\">\r\n  <div className=\"row\">\r\n    {comments.map((comment) => (\r\n      <Comments comment={comment} key={comment.id} />\r\n    ))}\r\n  </div>\r\n</div>\r\n</div> */}"]},"metadata":{},"sourceType":"module"}