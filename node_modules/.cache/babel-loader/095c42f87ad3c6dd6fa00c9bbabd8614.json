{"ast":null,"code":"const querySetter = (key, value, query) => {\n  let q = query + \"&\";\n  let re = new RegExp(\"[?|&]\" + key + \"=.*?&\");\n  if (!re.test(q)) q += key + \"=\" + encodeURI(value);else q = q.replace(re, \"&\" + key + \"=\" + encodeURIComponent(value));\n  q = q.trimStart(\"&\").trimEnd(\"&\");\n  return q[0] === \"?\" ? q : q = \"?\" + q;\n};\n\nconst querySetter1 = (key, value, query) => {\n  const search = query;\n  const params = new URLSearchParams(search);\n  const test = params.get(\"page\");\n  const newKey = `${key}=`;\n\n  if (query === \"\") {\n    return `?${newKey + value}`;\n  } else if (query.includes(newKey)) {\n    return query.replace(newKey + test, newKey + value);\n  }\n  /* return query.replace(newKey + test, newKey + value) */\n\n};\n\nexport { querySetter, querySetter1 };","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/SourceMx/react-blog/react-blog-spa-gavrilovstefan/src/helpers/querySetter.js"],"names":["querySetter","key","value","query","q","re","RegExp","test","encodeURI","replace","encodeURIComponent","trimStart","trimEnd","querySetter1","search","params","URLSearchParams","get","newKey","includes"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAaC,KAAb,KAAuB;AAEvC,MAAIC,CAAC,GAAGD,KAAK,GAAG,GAAhB;AACA,MAAIE,EAAE,GAAG,IAAIC,MAAJ,CAAW,UAAUL,GAAV,GAAgB,OAA3B,CAAT;AACA,MAAI,CAACI,EAAE,CAACE,IAAH,CAAQH,CAAR,CAAL,EACIA,CAAC,IAAIH,GAAG,GAAG,GAAN,GAAYO,SAAS,CAACN,KAAD,CAA1B,CADJ,KAGIE,CAAC,GAAGA,CAAC,CAACK,OAAF,CAAUJ,EAAV,EAAc,MAAMJ,GAAN,GAAY,GAAZ,GAAkBS,kBAAkB,CAACR,KAAD,CAAlD,CAAJ;AACJE,EAAAA,CAAC,GAAGA,CAAC,CAACO,SAAF,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,GAAzB,CAAJ;AACA,SAAOR,CAAC,CAAC,CAAD,CAAD,KAAO,GAAP,GAAaA,CAAb,GAAiBA,CAAC,GAAG,MAAMA,CAAlC;AACH,CAVD;;AAYA,MAAMS,YAAY,GAAG,CAACZ,GAAD,EAAMC,KAAN,EAAcC,KAAd,KAAwB;AACzC,QAAMW,MAAM,GAAGX,KAAf;AACA,QAAMY,MAAM,GAAG,IAAIC,eAAJ,CAAoBF,MAApB,CAAf;AACA,QAAMP,IAAI,GAAGQ,MAAM,CAACE,GAAP,CAAW,MAAX,CAAb;AAEA,QAAMC,MAAM,GAAI,GAAEjB,GAAI,GAAtB;;AACA,MAAGE,KAAK,KAAK,EAAb,EAAiB;AACb,WAAQ,IAAGe,MAAM,GAAGhB,KAAM,EAA1B;AACH,GAFD,MAEO,IAAIC,KAAK,CAACgB,QAAN,CAAeD,MAAf,CAAJ,EAA4B;AAC/B,WAAOf,KAAK,CAACM,OAAN,CAAcS,MAAM,GAAGX,IAAvB,EAA6BW,MAAM,GAAGhB,KAAtC,CAAP;AACH;AAED;;AACH,CAbD;;AAeA,SACIF,WADJ,EAEIa,YAFJ","sourcesContent":["const querySetter = (key, value, query) => {\r\n\r\n    let q = query + \"&\";\r\n    let re = new RegExp(\"[?|&]\" + key + \"=.*?&\");\r\n    if (!re.test(q))\r\n        q += key + \"=\" + encodeURI(value);\r\n    else\r\n        q = q.replace(re, \"&\" + key + \"=\" + encodeURIComponent(value));\r\n    q = q.trimStart(\"&\").trimEnd(\"&\");\r\n    return q[0]===\"?\" ? q : q = \"?\" + q;\r\n}\r\n\r\nconst querySetter1 = (key, value , query) => {\r\n    const search = query\r\n    const params = new URLSearchParams(search);\r\n    const test = params.get(\"page\");\r\n\r\n    const newKey = `${key}=`\r\n    if(query === \"\") {\r\n        return `?${newKey + value}`\r\n    } else if (query.includes(newKey)) {\r\n        return query.replace(newKey + test, newKey + value)\r\n    }\r\n\r\n    /* return query.replace(newKey + test, newKey + value) */\r\n}\r\n\r\nexport { \r\n    querySetter,\r\n    querySetter1\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}