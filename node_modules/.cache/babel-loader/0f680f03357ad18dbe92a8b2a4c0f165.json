{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stefan\\\\Desktop\\\\SourceMx\\\\react-blog\\\\react-blog-spa-gavrilovstefan\\\\src\\\\pages\\\\Test.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport AuthorInfo from \"../components/AuthorInfo\";\nimport ArticleInfo from \"../components/ArticleInfo\";\nimport Comments from \"../components/Comments\";\n\nconst Test = ({\n  allTags\n}) => {\n  const url = process.env.REACT_APP_API_ENDPOINT;\n  const [article, setArticle] = useState({});\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      const dataArticle = await fetch(`${url}/articles/${id}/test`).then(res => res.json());\n      setArticle(dataArticle);\n    };\n\n    fetchData();\n  }, [id, url]);\n  console.log(article);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AuthorInfo, {\n    author: article.author && article,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ArticleInfo, {\n    article: article,\n    allTags: allTags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Test;","map":{"version":3,"sources":["C:/Users/Stefan/Desktop/SourceMx/react-blog/react-blog-spa-gavrilovstefan/src/pages/Test.js"],"names":["React","useEffect","useState","useParams","Navbar","AuthorInfo","ArticleInfo","Comments","Test","allTags","url","process","env","REACT_APP_API_ENDPOINT","article","setArticle","id","fetchData","dataArticle","fetch","then","res","json","console","log","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC1B,QAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAAxB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AAGA,QAAM;AAAEc,IAAAA;AAAF,MAASb,SAAS,EAAxB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,SAAS,GAAG,YAAY;AAE1B,YAAMC,WAAW,GAAG,MAAMC,KAAK,CAC1B,GAAET,GAAI,aAAYM,EAAG,OADK,CAAL,CAEtBI,IAFsB,CAEhBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFQ,CAA1B;AAIEP,MAAAA,UAAU,CAACG,WAAD,CAAV;AACL,KAPD;;AAQAD,IAAAA,SAAS;AAEV,GAXQ,EAWN,CAACD,EAAD,EAAKN,GAAL,CAXM,CAAT;AAaAa,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEA,OAAO,CAACW,MAAR,IAAkBX,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEA,OAAtB;AAA+B,IAAA,OAAO,EAAEL,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAcD,CArCD;;AAuCA,eAAeD,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../components/Navbar\";\r\nimport AuthorInfo from \"../components/AuthorInfo\";\r\nimport ArticleInfo from \"../components/ArticleInfo\";\r\nimport Comments from \"../components/Comments\";\r\n\r\n\r\nconst Test = ({allTags}) => {\r\n  const url = process.env.REACT_APP_API_ENDPOINT\r\n  \r\n  const [article, setArticle] = useState({});\r\n\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n\r\n        const dataArticle = await fetch(\r\n            `${url}/articles/${id}/test`\r\n          ).then((res) => res.json());\r\n     \r\n          setArticle(dataArticle)\r\n    };\r\n    fetchData();\r\n    \r\n  }, [id, url]);\r\n\r\n  console.log(article)\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <AuthorInfo author={article.author && article} />\r\n      <ArticleInfo article={article} allTags={allTags} />\r\n      {/* <div className=\"container\" key=\"cards\">\r\n        <div className=\"row\">\r\n          {article && article.comments.map((comment) => (\r\n            <Comments comment={comment} key={comment.id} />\r\n          ))}\r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}